@model IEnumerable<Commerce_WebApp.Models.Financial_Transaction>

@{
    ViewData["Title"] = "My Account";
}
<style type="text/css">
    /* table */
    .tg {
        border-collapse: collapse;
        border-spacing: 0;
        margin: 15px 0;
    }

    .tg tr {
        margin: 1px 0;
    }

        .tg td {
            border-bottom: 2px solid #007AA3;
            font-family: Arial, sans-serif;
            font-size: 14px;
            overflow: hidden;
            padding: 5px 20px;
            word-break: normal;
            background-color: #faf9f7;
        }

        .tg th {
            border-bottom: 7px solid #006747;
            border-top: 5px solid #006747;
            font-family: Arial, sans-serif;
            font-size: 14px;
            font-weight: 550;
            overflow: hidden;
            padding: 14px 20px;
            word-break: normal;
        }

        .tg .tg-ul38 {
            position: -webkit-sticky;
            position: sticky;
            text-align: left;
            top: -1px;
            vertical-align: top;
            will-change: transform
        }

        .tg .tg-j1i3 {
            position: -webkit-sticky;
            position: sticky;
            text-align: left;
            top: 0px;
            vertical-align: top;
            will-change: transform;
            background-color: #4FA800;
        }

        /* table alphanumeric item */
        .tg .tg-0pky {
            text-align: left;
            vertical-align: top
        }

        /* insert dollar sign before money items */
        .tg .tg-money:before {
            content: '$';
        }

        /* table money item */
        .tg .tg-money {
            text-align: right;
            vertical-align: top
        }

        /* table money header */
        .tg .moneyHeader {
            text-align: right;
        }

        .tg .tg-0lax {
            text-align: left;
            vertical-align: top
        }

    .tg-sort-header::-moz-selection {
        background: 0 0
    }

    .tg-sort-header::selection {
        background: 0 0
    }

    .tg-sort-header {
        cursor: pointer
    }

        .tg-sort-header:after {
            content: '';
            float: right;
            margin-top: 7px;
            border-width: 0 5px 5px;
            border-style: solid;
            border-color: #404040 transparent;
            visibility: hidden
        }

        .tg-sort-header:hover:after {
            visibility: visible
        }

    .tg-sort-asc:after, .tg-sort-asc:hover:after, .tg-sort-desc:after {
        visibility: visible;
        opacity: .4
    }

    .tg-sort-desc:after {
        border-bottom: none;
        border-width: 5px 5px 0
    }

    .add-transaction-submit {
        background: #007AA3 !important;
    }
</style>
<form asp-action="Index" asp-controller="Account" class="form-horizontal">
    <div class="form-row align-items-center" style="justify-content: center;">
        <input type="hidden" name="id" value="@Context.Request.Query["id"]">
        <div class="col-auto">
            <input type="text" class="form-control" name="description" placeholder="Description" required>
        </div>
        <div class="col-auto">
            <input type="number" min="0.01" name="amount" step="any" class="form-control" placeholder="Amount" required>
        </div>
        <div class="col-auto">
            <div class="form-check">
                <input class="form-check-input" type="radio" name="Type" id="Type1" value="DR" checked>
                <label class="form-check-label" value="DR" for="Type1">Debit</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="Type" id="Type2" value="CR">
                <label class="form-check-label" value="CR" for="Type2">Credit</label>
            </div>
        </div>
        <div class="col-auto">
            <input type="submit" value="Add Transaction" class="btn btn-primary add-transaction-submit" />
        </div>
    </div>
</form>

<table id="tg-hh5Z3" class="tg" width="100%">
    <thead>
        <tr class="first">
            <th class="tg-j1i3">Date and Time</th>
            <th class="tg-j1i3">Transaction Description</th>
            <th class="tg-j1i3">Type</th>
            <th class="tg-j1i3 moneyHeader">Amount</th>
            <th class="tg-j1i3 moneyHeader">Balance</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td class="tg-0pky">
            @Html.DisplayFor(modelItem => item.TimeStamp)
            </td>
            <td class="tg-0pky">
            @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td class="tg-0pky">
            @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td class="tg-money">
            @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td class="tg-money">
            @Html.DisplayFor(modelItem => item.Balance_After)
            </td>
        </tr>
    }
    </tbody>
</table>
<script charset="utf-8">var TGSort=window.TGSort||function(n){"use strict";function r(n){return n?n.length:0}function t(n,t,e,o=0){for(e=r(n);o<e;++o)t(n[o],o)}function e(n){return n.split("").reverse().join("")}function o(n){var e=n[0];return t(n,function(n){for(;!n.startsWith(e);)e=e.substring(0,r(e)-1)}),r(e)}function u(n,r,e=[]){return t(n,function(n){r(n)&&e.push(n)}),e}var a=parseFloat;function i(n,r){return function(t){var e="";return t.replace(n,function(n,t,o){return e=t.replace(r,"")+"."+(o||"").substring(1)}),a(e)}}var s=i(/^(?:\s*)([+-]?(?:\d+)(?:,\d{3})*)(\.\d*)?$/g,/,/g),c=i(/^(?:\s*)([+-]?(?:\d+)(?:\.\d{3})*)(,\d*)?$/g,/\./g);function f(n){var t=a(n);return!isNaN(t)&&r(""+t)+1>=r(n)?t:NaN}function d(n){var e=[],o=n;return t([f,s,c],function(u){var a=[],i=[];t(n,function(n,r){r=u(n),a.push(r),r||i.push(n)}),r(i)<r(o)&&(o=i,e=a)}),r(u(o,function(n){return n==o[0]}))==r(o)?e:[]}function v(n){if("TABLE"==n.nodeName){for(var a=function(r){var e,o,u=[],a=[];return function n(r,e){e(r),t(r.childNodes,function(r){n(r,e)})}(n,function(n){"TR"==(o=n.nodeName)?(e=[],u.push(e),a.push(n)):"TD"!=o&&"TH"!=o||e.push(n)}),[u,a]}(),i=a[0],s=a[1],c=r(i),f=c>1&&r(i[0])<r(i[1])?1:0,v=f+1,p=i[f],h=r(p),l=[],g=[],N=[],m=v;m<c;++m){for(var T=0;T<h;++T){r(g)<h&&g.push([]);var C=i[m][T],L=C.textContent||C.innerText||"";g[T].push(L.trim())}N.push(m-v)}t(p,function(n,t){l[t]=0;var a=n.classList;a.add("tg-sort-header"),n.addEventListener("click",function(){var n=l[t];!function(){for(var n=0;n<h;++n){var r=p[n].classList;r.remove("tg-sort-asc"),r.remove("tg-sort-desc"),l[n]=0}}(),(n=1==n?-1:+!n)&&a.add(n>0?"tg-sort-asc":"tg-sort-desc"),l[t]=n;var i,f=g[t],m=function(r,t){return n*f[r].localeCompare(f[t])||n*(r-t)},T=function(n){var t=d(n);if(!r(t)){var u=o(n),a=o(n.map(e));t=d(n.map(function(n){return n.substring(u,r(n)-a)}))}return t}(f);(r(T)||r(T=r(u(i=f.map(Date.parse),isNaN))?[]:i))&&(m=function(r,t){var e=T[r],o=T[t],u=isNaN(e),a=isNaN(o);return u&&a?0:u?-n:a?n:e>o?n:e<o?-n:n*(r-t)});var C,L=N.slice();L.sort(m);for(var E=v;E<c;++E)(C=s[E].parentNode).removeChild(s[E]);for(E=v;E<c;++E)C.appendChild(s[v+L[E-v]])})})}}n.addEventListener("DOMContentLoaded",function(){for(var t=n.getElementsByClassName("tg"),e=0;e<r(t);++e)try{v(t[e])}catch(n){}})}(document)</script>
